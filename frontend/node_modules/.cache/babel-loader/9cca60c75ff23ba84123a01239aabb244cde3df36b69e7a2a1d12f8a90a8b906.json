{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\finance-tracker\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as XLSX from 'xlsx';\nimport BalanceCard from '../components/dashboard/BalanceCard';\nimport RecentTransactions from '../components/dashboard/RecentTransactions';\nimport BudgetCard from '../components/dashboard/BudgetCard';\nimport SpendingChart from '../components/analytics/SpendingChart';\nimport MonthlyTrends from '../components/analytics/MonthlyTrends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [balance, setBalance] = useState(0);\n  const [showForm, setShowForm] = useState(false);\n  const [newTransaction, setNewTransaction] = useState({\n    type: 'expense',\n    category: '',\n    amount: '',\n    description: '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [categories, setCategories] = useState(['Food', 'Transport', 'Housing', 'Entertainment', 'Utilities', 'Salary', 'Freelance', 'Other']);\n\n  // Handle Excel import\n  const handleFileImport = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet);\n\n      // Transform Excel data to match our transaction format\n      const importedTransactions = jsonData.map((item, index) => {\n        var _item$Type;\n        return {\n          id: Date.now() + index,\n          type: ((_item$Type = item.Type) === null || _item$Type === void 0 ? void 0 : _item$Type.toLowerCase()) || 'expense',\n          category: item.Category || 'Other',\n          amount: parseFloat(item.Amount) || 0,\n          description: item.Description || '',\n          date: item.Date ? new Date(item.Date) : new Date()\n        };\n      });\n      setTransactions(importedTransactions);\n      updateBalance(importedTransactions);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  // Rest of your component logic...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Luxury Finance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-subtitle\",\n        children: \"Manage your finances with golden elegance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-transaction-btn\",\n        onClick: () => setShowForm(!showForm),\n        children: showForm ? 'Cancel' : '+ Add Transaction'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-import\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"excel-upload\",\n          className: \"excel-import-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-file-excel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \"Import from Excel\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"excel-upload\",\n          type: \"file\",\n          accept: \".xlsx, .xls, .csv\",\n          onChange: handleFileImport,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"excel-hint\",\n          children: \"Upload an Excel file with columns: Type, Category, Amount, Description, Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(BalanceCard, {\n        balance: balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BudgetCard, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RecentTransactions, {\n        transactions: transactions,\n        onDelete: deleteTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SpendingChart, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonthlyTrends, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"FyWriE5fsN3Cp8ZFW4odFSUGfYI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","BalanceCard","RecentTransactions","BudgetCard","SpendingChart","MonthlyTrends","jsxDEV","_jsxDEV","Dashboard","_s","transactions","setTransactions","balance","setBalance","showForm","setShowForm","newTransaction","setNewTransaction","type","category","amount","description","date","Date","toISOString","split","categories","setCategories","handleFileImport","e","file","target","files","reader","FileReader","onload","data","Uint8Array","result","workbook","read","firstSheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","importedTransactions","map","item","index","_item$Type","id","now","Type","toLowerCase","Category","parseFloat","Amount","Description","updateBalance","readAsArrayBuffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","accept","onChange","style","display","onDelete","deleteTransaction","_c","$RefreshReg$"],"sources":["C:/Users/HP/finance-tracker/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport BalanceCard from '../components/dashboard/BalanceCard';\r\nimport RecentTransactions from '../components/dashboard/RecentTransactions';\r\nimport BudgetCard from '../components/dashboard/BudgetCard';\r\nimport SpendingChart from '../components/analytics/SpendingChart';\r\nimport MonthlyTrends from '../components/analytics/MonthlyTrends';\r\n\r\nconst Dashboard = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [balance, setBalance] = useState(0);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [newTransaction, setNewTransaction] = useState({\r\n    type: 'expense',\r\n    category: '',\r\n    amount: '',\r\n    description: '',\r\n    date: new Date().toISOString().split('T')[0]\r\n  });\r\n  const [categories, setCategories] = useState([\r\n    'Food', 'Transport', 'Housing', 'Entertainment', 'Utilities', 'Salary', 'Freelance', 'Other'\r\n  ]);\r\n\r\n  // Handle Excel import\r\n  const handleFileImport = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    \r\n    reader.onload = (e) => {\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const jsonData = XLSX.utils.sheet_to_json(firstSheet);\r\n      \r\n      // Transform Excel data to match our transaction format\r\n      const importedTransactions = jsonData.map((item, index) => ({\r\n        id: Date.now() + index,\r\n        type: item.Type?.toLowerCase() || 'expense',\r\n        category: item.Category || 'Other',\r\n        amount: parseFloat(item.Amount) || 0,\r\n        description: item.Description || '',\r\n        date: item.Date ? new Date(item.Date) : new Date()\r\n      }));\r\n      \r\n      setTransactions(importedTransactions);\r\n      updateBalance(importedTransactions);\r\n    };\r\n    \r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  // Rest of your component logic...\r\n  \r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h1>Luxury Finance Tracker</h1>\r\n        <p className=\"dashboard-subtitle\">Manage your finances with golden elegance</p>\r\n      </div>\r\n      \r\n      <div className=\"dashboard-controls\">\r\n        <button \r\n          className=\"add-transaction-btn\"\r\n          onClick={() => setShowForm(!showForm)}\r\n        >\r\n          {showForm ? 'Cancel' : '+ Add Transaction'}\r\n        </button>\r\n        \r\n        <div className=\"excel-import\">\r\n          <label htmlFor=\"excel-upload\" className=\"excel-import-btn\">\r\n            <i className=\"fas fa-file-excel\"></i>\r\n            Import from Excel\r\n          </label>\r\n          <input\r\n            id=\"excel-upload\"\r\n            type=\"file\"\r\n            accept=\".xlsx, .xls, .csv\"\r\n            onChange={handleFileImport}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <p className=\"excel-hint\">Upload an Excel file with columns: Type, Category, Amount, Description, Date</p>\r\n        </div>\r\n        \r\n        {/* Transaction form and other components... */}\r\n      </div>\r\n      \r\n      <div className=\"dashboard-grid\">\r\n        <BalanceCard balance={balance} />\r\n        <BudgetCard transactions={transactions} />\r\n        <RecentTransactions transactions={transactions} onDelete={deleteTransaction} />\r\n        <SpendingChart transactions={transactions} />\r\n        <MonthlyTrends transactions={transactions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}